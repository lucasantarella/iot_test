"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _ = require("lodash");
const os = require("os");
const Raven = require("raven");
const Promise = require("bluebird");
const common_tags_1 = require("common-tags");
const patterns = require("./utils/patterns");
const captureException = Promise.promisify(Raven.captureException, { context: Raven });
function hasCode(error) {
    return error.code != null;
}
function treatFailedBindingAsMissingModule(error) {
    if (error.message.startsWith('Could not locate the bindings file.')) {
        error.code = 'MODULE_NOT_FOUND';
    }
}
function interpret(error) {
    if (!(error instanceof Error)) {
        return;
    }
    treatFailedBindingAsMissingModule(error);
    if (hasCode(error)) {
        const errorCodeHandler = messages[error.code];
        const message = errorCodeHandler && errorCodeHandler(error);
        if (message) {
            return message;
        }
        if (!_.isEmpty(error.message)) {
            return `${error.code}: ${error.message}`;
        }
    }
    else {
        return error.message;
    }
}
const messages = {
    EISDIR: error => `File is a directory: ${error.path}`,
    ENOENT: error => `No such file or directory: ${error.path}`,
    ENOGIT: () => common_tags_1.stripIndent `
		Git is not installed on this system.
		Head over to http://git-scm.com to install it and run this command again.`,
    EPERM: () => common_tags_1.stripIndent `
		You don't have enough privileges to run this operation.
		${os.platform() === 'win32'
        ? 'Run a new Command Prompt as administrator and try running this command again.'
        : 'Try running this command again prefixing it with `sudo`.'}

		If this is not the case, and you're trying to burn an SDCard, check that the write lock is not set.`,
    EACCES: e => messages.EPERM(e),
    ETIMEDOUT: () => 'Oops something went wrong, please check your connection and try again.',
    MODULE_NOT_FOUND: () => common_tags_1.stripIndent `
		Part of the CLI could not be loaded. This typically means your CLI install is in a broken state.
		${os.arch() === 'x64'
        ? 'You can normally fix this by uninstalling and reinstalling the CLI.'
        : common_tags_1.stripIndent `
				You're using an unsupported architecture (${os.arch()}), so this is typically caused by missing native modules.
				Reinstalling may help, but pay attention to errors in native module build steps en route.
			`}
	`,
    BalenaExpiredToken: () => common_tags_1.stripIndent `
		Looks like your session token is expired.
		Please try logging in again with:
			$ balena login`,
};
exports.handle = function (error) {
    let message = interpret(error);
    if (message == null) {
        return;
    }
    if (process.env.DEBUG) {
        message = error.stack;
    }
    patterns.printErrorMessage(message);
    return captureException(error)
        .timeout(1000)
        .catch(function () {
    })
        .finally(() => process.exit(error.exitCode || 1));
};
//# sourceMappingURL=errors.js.map