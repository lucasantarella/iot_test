// Generated by CoffeeScript 1.12.7

/*
Copyright 2016-2017 Balena

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */
var normalizeUuidProp;

normalizeUuidProp = require('../utils/normalization').normalizeUuidProp;

module.exports = {
  signature: 'logs <uuid>',
  description: 'show device logs',
  help: 'Use this command to show logs for a specific device.\n\nBy default, the command prints all log messages and exit.\n\nTo continuously stream output, and see new logs in real time, use the `--tail` option.\n\nExamples:\n\n	$ balena logs 23c73a1\n	$ balena logs 23c73a1',
  options: [
    {
      signature: 'tail',
      description: 'continuously stream output',
      boolean: true,
      alias: 't'
    }
  ],
  permission: 'user',
  primary: true,
  action: function(params, options, done) {
    var balena, moment, printLine;
    normalizeUuidProp(params);
    balena = require('balena-sdk').fromSharedOptions();
    moment = require('moment');
    printLine = function(line) {
      var timestamp;
      timestamp = moment(line.timestamp).format('DD.MM.YY HH:mm:ss (ZZ)');
      return console.log(timestamp + " " + line.message);
    };
    if (options.tail) {
      return balena.logs.subscribe(params.uuid, {
        count: 100
      }).then(function(logs) {
        logs.on('line', printLine);
        return logs.on('error', done);
      })["catch"](done);
    } else {
      return balena.logs.history(params.uuid).each(printLine)["catch"](done);
    }
  }
};
