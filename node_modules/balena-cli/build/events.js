"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Capitano = require("capitano");
const _ = require("lodash");
const Mixpanel = require("mixpanel");
const Raven = require("raven");
const Promise = require("bluebird");
const BalenaSdk = require("balena-sdk");
const packageJSON = require("../package.json");
const balena = BalenaSdk.fromSharedOptions();
const getMatchCommandAsync = Promise.promisify(Capitano.state.getMatchCommand);
const getMixpanel = _.memoize(() => balena.models.config
    .getAll()
    .get('mixpanelToken')
    .then(Mixpanel.init));
function trackCommand(capitanoCli) {
    return Promise.props({
        balenaUrl: balena.settings.get('balenaUrl'),
        username: balena.auth.whoami().catchReturn(undefined),
        mixpanel: getMixpanel(),
    })
        .then(({ username, balenaUrl, mixpanel }) => {
        return getMatchCommandAsync(capitanoCli.command).then(command => {
            Raven.mergeContext({
                user: {
                    id: username,
                    username,
                },
            });
            return mixpanel.track(`[CLI] ${command.signature.toString()}`, {
                distinct_id: username,
                argv: process.argv.join(' '),
                version: packageJSON.version,
                node: process.version,
                arch: process.arch,
                balenaUrl,
                platform: process.platform,
                command: capitanoCli,
            });
        });
    })
        .timeout(100)
        .catchReturn(undefined);
}
exports.trackCommand = trackCommand;
//# sourceMappingURL=events.js.map