// Generated by CoffeeScript 1.12.7
var updateWindowSize, windowSize;

windowSize = {};

updateWindowSize = function() {
  var ref, size;
  size = (ref = require('window-size')) != null ? ref.get() : void 0;
  windowSize.width = size != null ? size.width : void 0;
  return windowSize.height = size != null ? size.height : void 0;
};

process.stdout.on('resize', updateWindowSize);

module.exports = function(stream) {
  var clearLine, currentWindowSize, cursorDown, cursorHidden, cursorUp, deleteToEnd, hideCursor, replaceLine, showCursor, write, writeLine;
  if (stream == null) {
    stream = process.stdout;
  }
  updateWindowSize();
  currentWindowSize = function() {
    return {
      width: windowSize.width,
      height: windowSize.height
    };
  };
  hideCursor = function() {
    return stream.write('\u001B[?25l');
  };
  showCursor = function() {
    return stream.write('\u001B[?25h');
  };
  cursorUp = function(rows) {
    if (rows == null) {
      rows = 0;
    }
    return stream.write("\u001B[" + rows + "A");
  };
  cursorDown = function(rows) {
    if (rows == null) {
      rows = 0;
    }
    return stream.write("\u001B[" + rows + "B");
  };
  cursorHidden = function() {
    var Promise;
    Promise = require('bluebird');
    return Promise["try"](hideCursor).disposer(showCursor);
  };
  write = function(str) {
    return stream.write(str);
  };
  writeLine = function(str) {
    return stream.write(str + "\n");
  };
  clearLine = function() {
    return stream.write('\u001B[2K\r');
  };
  replaceLine = function(str) {
    clearLine();
    return write(str);
  };
  deleteToEnd = function() {
    return stream.write('\u001b[0J');
  };
  return {
    stream: stream,
    currentWindowSize: currentWindowSize,
    hideCursor: hideCursor,
    showCursor: showCursor,
    cursorHidden: cursorHidden,
    cursorUp: cursorUp,
    cursorDown: cursorDown,
    write: write,
    writeLine: writeLine,
    clearLine: clearLine,
    replaceLine: replaceLine,
    deleteToEnd: deleteToEnd
  };
};
