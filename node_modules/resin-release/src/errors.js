"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
var TypedError = require("typed-error");
var ObjectDoesNotExistError = (function (_super) {
    __extends(ObjectDoesNotExistError, _super);
    function ObjectDoesNotExistError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ObjectDoesNotExistError;
}(TypedError));
exports.ObjectDoesNotExistError = ObjectDoesNotExistError;
var UnauthorisedError = (function (_super) {
    __extends(UnauthorisedError, _super);
    function UnauthorisedError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return UnauthorisedError;
}(TypedError));
exports.UnauthorisedError = UnauthorisedError;
var BadRequestError = (function (_super) {
    __extends(BadRequestError, _super);
    function BadRequestError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BadRequestError;
}(TypedError));
exports.BadRequestError = BadRequestError;
var ServerError = (function (_super) {
    __extends(ServerError, _super);
    function ServerError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ServerError;
}(TypedError));
exports.ServerError = ServerError;
var HttpResponseError = (function (_super) {
    __extends(HttpResponseError, _super);
    function HttpResponseError(message, statusCode) {
        var _this = _super.call(this, message) || this;
        _this.statusCode = statusCode;
        return _this;
    }
    return HttpResponseError;
}(TypedError));
exports.HttpResponseError = HttpResponseError;
//# sourceMappingURL=errors.js.map