// Generated by CoffeeScript 1.12.5
var DEFAULT_RESULTS_CACHING_INTERVAL, IMG_MAKER_API_PREFIX, IMG_MAKER_API_VERSION, assign, getImgMakerHelper, promiseMemoize;

assign = require('lodash/assign');

promiseMemoize = require('promise-memoize');

IMG_MAKER_API_VERSION = '1';

IMG_MAKER_API_PREFIX = "/api/v" + IMG_MAKER_API_VERSION;

DEFAULT_RESULTS_CACHING_INTERVAL = 10 * 60 * 1000;

getImgMakerHelper = function(imageMakerUrl, request) {
  var buildOptions, exports, sendRequest;
  exports = {};
  buildOptions = function(options) {
    var url;
    url = options.url;
    url = "" + IMG_MAKER_API_PREFIX + url;
    return assign({
      method: 'GET'
    }, options, {
      url: url,
      baseUrl: imageMakerUrl,
      sendToken: false
    });
  };
  exports.request = sendRequest = function(options) {
    return request.send(buildOptions(options));
  };
  exports.stream = function(options) {
    return request.stream(buildOptions(options));
  };
  exports.buildApiRequester = function(arg) {
    var buildUrl, callHelper, maxAge, memoizedFunction, onError, postProcess, ref, ref1, ref2;
    ref = arg != null ? arg : {}, buildUrl = ref.buildUrl, postProcess = (ref1 = ref.postProcess) != null ? ref1 : function(x) {
      return x;
    }, onError = (ref2 = ref.onError) != null ? ref2 : function(x) {
      throw x;
    }, maxAge = ref.maxAge;
    callHelper = function(deviceType, version) {
      return sendRequest({
        url: buildUrl({
          deviceType: encodeURIComponent(deviceType),
          version: encodeURIComponent(version)
        })
      }).then(postProcess)["catch"](onError);
    };
    if (maxAge === void 0) {
      maxAge = DEFAULT_RESULTS_CACHING_INTERVAL;
    } else if (maxAge === null) {
      maxAge = void 0;
    }
    memoizedFunction = promiseMemoize(callHelper, {
      maxAge: maxAge
    });
    return function(deviceType, version) {
      if (version == null) {
        version = 'latest';
      }
      return memoizedFunction(deviceType, version);
    };
  };
  return exports;
};

module.exports = getImgMakerHelper;
