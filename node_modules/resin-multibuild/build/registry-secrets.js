"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ajv = require("ajv");
const errors_1 = require("./errors");
var errors_2 = require("./errors");
exports.RegistrySecretValidationError = errors_2.RegistrySecretValidationError;
class RegistrySecretValidator {
    constructor() {
        this.registrySecretJsonSchema = {
            type: 'object',
            patternProperties: {
                '^\\S+$': {
                    type: 'object',
                    properties: {
                        username: { type: 'string' },
                        password: { type: 'string' },
                    },
                    additionalProperties: false,
                },
            },
            additionalProperties: false,
        };
        this.validator = new ajv();
        this.validateFunction = this.validator.compile(this.registrySecretJsonSchema);
    }
    validateRegistrySecrets(parsedJson) {
        const valid = this.validateFunction(parsedJson);
        if (!valid) {
            throw new errors_1.RegistrySecretValidationError(this.validator.errorsText(this.validateFunction.errors));
        }
        return parsedJson;
    }
    parseRegistrySecrets(json) {
        return this.validateRegistrySecrets(JSON.parse(json));
    }
}
exports.RegistrySecretValidator = RegistrySecretValidator;
//# sourceMappingURL=registry-secrets.js.map