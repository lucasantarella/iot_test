/// <reference types="node" />
import * as Promise from 'bluebird';
import * as Dockerode from 'dockerode';
import * as Compose from 'resin-compose-parse';
import * as Stream from 'stream';
import { BuildTask } from './build-task';
import { LocalImage } from './local-image';
import * as PathUtils from './path-utils';
export * from './build-task';
export * from './errors';
export * from './local-image';
export * from './registry-secrets';
export { PathUtils };
export declare function splitBuildStream(composition: Compose.Composition, buildStream: Stream.Readable): Promise<BuildTask[]>;
export declare function fromImageDescriptors(images: Compose.ImageDescriptor[], buildStream: Stream.Readable): Promise<BuildTask[]>;
export declare function performResolution(tasks: BuildTask[], architecture: string, deviceType: string): Promise<BuildTask[]>;
export declare function performBuilds(tasks: BuildTask[], docker: Dockerode): Promise<LocalImage[]>;
export declare function performSingleBuild(task: BuildTask, docker: Dockerode): Promise<LocalImage>;
